class CharacterTokenizer:
    def tokenize(self, s: str) -> VecChar: ...
    def unique_tokenize(self, s: str) -> VecChar: ...

class WhitespaceCharSeqTokenizer:
    def tokenize(self, s: str) -> VecVecChar: ...
    def unique_tokenize(self, s: str) -> VecVecChar: ...

class VecChar: ...
class VecVecChar: ...

def levenshtein_similarity(s1: VecChar, s2: VecChar) -> float: ...
def jaro_similarity(s1: VecChar, s2: VecChar) -> float: ...
def jaro_winkler_similarity(
    s1: VecChar, s2: VecChar, threshold=0.7, scaling_factor=0.1, prefix_len=4
) -> float: ...
def monge_elkan_similarity(s1: VecVecChar, s2: VecVecChar) -> float: ...
def symmetric_monge_elkan_similarity(s1: VecVecChar, s2: VecVecChar) -> float: ...
def hybrid_jaccard_similarity(key: VecVecChar, value: VecVecChar) -> float: ...
